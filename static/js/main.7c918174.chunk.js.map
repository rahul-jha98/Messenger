{"version":3,"sources":["components/LoadingScreen.js","firebase.js","components/Home/ContactsPanel/CreateGroup.js","components/Home/ContactsPanel/ContactsPanel.js","actions/index.js","actions/types.js","components/Home/Messages/MessageHeader.js","components/Home/Messages/AllMessages.js","components/Home/Messages/ScrollableMessages.js","components/Home/Messages/MessageForm.js","components/Home/Messages/Messages.js","components/Home/index.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","components/AppBar/AppBar.js","serviceWorker.js","reducers/index.js","index.js","logo.svg"],"names":["props","style","width","height","display","justifyContent","alignItems","flexDirection","CircularProgress","color","Typography","variant","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CreateGroupDialog","state","open","name","description","nameError","descriptionError","groupsRef","database","ref","setOpen","val","setState","resetErrors","a","handleChange","prop","event","target","value","setMessage","isFormValid","length","handleClickOpen","closeDialog","handleSubmit","then","addChannel","key","push","user","currentUser","group","id","createdBy","displayName","photoUrl","photoURL","child","update","handleClose","classes","this","Button","aria-label","onClick","startIcon","paddingLeft","paddingRight","Dialog","padding","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","label","fullWidth","className","margin","onChange","error","helperText","DialogActions","autoFocus","marginRight","React","Component","withStyles","theme","marginTop","spacing","ContactsPanel","anchorEl","groups","setAnchorEl","handleMenu","currentTarget","setInState","addListeners","loadedGroups","on","snap","console","log","changeActiveChat","setCurrentChat","displayGroups","map","CardActionArea","CardHeader","avatar","Avatar","title","subheader","off","Paper","elevation","src","action","IconButton","aria-haspopup","email","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","CreateGroup","connect","chat","type","payload","MessageHeader","root","AppBar","position","disableGutters","Toolbar","backgroundColor","palette","text","primary","flexGrow","ChatMessage","radLeft","radRight","firstMessage","Card","borderRadius","borderTopLeftRadius","borderTopRightRadius","showName","textAlign","content","lastUserId","messages","userId","ElevationScroll","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","cloneElement","ElevateAppBar","messagesLoading","chatId","addMessageListener","componentDidUpdate","prevProps","removeListeners","messageRef","loadedMessages","Fragment","Container","maxHeight","List","uid","background","paper","overflow","listSection","ul","MessageForm","createMessage","timestamp","ServerValue","TIMESTAMP","submit","set","Grid","container","item","xs","InputBase","input","centering","placeholder","multiline","rowsMax","icon","fontSize","verticalAlign","marginLeft","flex","Messages","flexWrap","ScrollableMessages","useStyles","makeStyles","secondary","currentChat","direction","justify","sm","bg","App","isLoading","LoadingScreen","Login","handleClickShowPassword","showPassword","emailError","passwordError","password","loading","auth","signInWithEmailAndPassword","signedInUser","catch","err","toLowerCase","includes","maxWidth","logo","alt","clsx","textField","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","Visibility","VisibilityOff","labelWidth","FormHelperText","size","component","to","replace","link","main","Register","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","usersRef","menuButton","useState","Boolean","handleSignout","toggleDarkMode","signOut","aria-controls","MenuItem","location","hostname","match","initialUserState","initialChatState","rootReducer","combineReducers","createMuiTheme","theme2","store","createStore","Root","darkMode","onAuthStateChanged","showSnackbarMessage","history","setUser","clearUser","ThemeProvider","exact","path","Snackbar","autoHideDuration","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7c918174.chunk.js","sourcesContent":["import React from 'react';\nimport {CircularProgress, Typography} from '@material-ui/core';\n\nexport default (props) => {\n    return (\n        <div style={{width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', flexDirection:'column'}}>\n          <CircularProgress color='secondary'/>\n          <br/>\n          <Typography variant = 'body1' >{props.message}</Typography>\n        </div>\n    )\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDGK-ZnwyHooQnl1HSM8zL4lJckmrHaSBo\",\n    authDomain: \"messenger-clone-500a9.firebaseapp.com\",\n    databaseURL: \"https://messenger-clone-500a9.firebaseio.com\",\n    projectId: \"messenger-clone-500a9\",\n    storageBucket: \"messenger-clone-500a9.appspot.com\",\n    messagingSenderId: \"309370468657\",\n    appId: \"1:309370468657:web:bea5db00e2f6454e4fd810\",\n    measurementId: \"G-HH7ZZBB9HY\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {TextField} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport GroupAddTwoToneIcon from '@material-ui/icons/GroupAddTwoTone';\n\nimport firebase from '../../../firebase';\n\nconst useStyles = (theme) => ({\n    margin: {\n        marginTop: theme.spacing(1),\n    },\n  });\n\n\nclass CreateGroupDialog extends React.Component {\n\n  state = {\n    open: false,\n    name: '',\n    description: '',\n    nameError: '',\n    descriptionError: '',\n    groupsRef: firebase.database().ref('groups')\n  }\n\n  setOpen = (val) => {\n    this.setState({ open: val});\n  }\n  \n  resetErrors = async () => {\n    await this.setState({nameError: '',descriptionError: ''});\n  }\n\n  handleChange = (prop) => (event) => {\n    this.setState({[prop]: event.target.value });\n  };\n\n  setMessage = (name, message) => {\n    this.setState({ [name]: message});\n  }\n\n  isFormValid = () => {\n    let val = true;\n    \n    if (this.state.name.length === 0) {\n        this.setMessage('nameError', \"Name of group cannot be empty\");\n        val = false;\n    } \n    else if (this.state.description.length === 0) {\n        this.setMessage('descriptionError', \"Description cannot be empty\");\n        val = false;\n    } \n\n    return val;\n  }\n  \n  handleClickOpen = () => {\n    this.props.closeDialog();\n    this.setOpen(true);\n  };\n\n  handleSubmit = () => {\n    this.resetErrors().then(() => {\n      if (this.isFormValid()) {\n        this.addChannel();\n      }\n    });\n  }\n\n  addChannel = () => {\n    const {groupsRef, name, description} = this.state;\n\n    const key = groupsRef.push().key;\n    const user = this.props.currentUser;\n\n    const group = {\n      id: key,\n      name: name,\n      description: description,\n      createdBy: {\n        name: user.displayName,\n        photoUrl: user.photoURL\n      }\n    };\n\n    groupsRef\n      .child(key)\n      .update(group)\n      .then(() => {\n        this.setOpen(false);\n      })\n  }\n\n  handleClose = (id) => () => {\n    if (id === 1) {\n      this.handleSubmit();\n    } else {\n      this.setOpen(false);\n    }\n    \n  };\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div>\n        <Button aria-label=\"Create Group\" onClick={this.handleClickOpen} startIcon={<GroupAddTwoToneIcon/>}\n          style={{paddingLeft:12, paddingRight: 12}}>\n          Create Group\n        </Button>\n        <Dialog\n          \n          open={this.state.open}\n          // onClose={handleClose}\n          style={{padding: 10}}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Create New Group\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter details to create a new Group.\n            </DialogContentText>\n  \n            <TextField id=\"name\" label=\"Name\" variant=\"filled\" \n              fullWidth className={classes.margin}\n              onChange={this.handleChange('name')}\n              error = {this.state.nameError.length > 0}\n              helperText = {this.state.nameError}/>\n\n            <TextField id=\"desc\" \n              label=\"Description\" variant=\"filled\" \n              fullWidth className={classes.margin}\n              onChange={this.handleChange('description')}\n              error = {this.state.descriptionError.length > 0}\n              helperText = {this.state.descriptionError}/>\n  \n            \n          </DialogContent>\n          <DialogActions>\n              <Button autoFocus onClick={this.handleClose(0)} color=\"secondary\">\n                  Cancel\n              </Button>\n              <Button onClick={this.handleClose(1)} color=\"secondary\" variant=\"contained\" autoFocus startIcon={<GroupAddTwoToneIcon/>}\n                  style= {{marginRight: 16}}>\n                  Create\n              </Button>\n            </DialogActions>\n          \n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(CreateGroupDialog)","import React from 'react';\nimport {connect} from 'react-redux';\nimport {setCurrentChat} from '../../../actions';\n\nimport {Paper, Typography, Avatar, CardHeader, IconButton, CardActionArea,\nMenu} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CreateGroupDialog from './CreateGroup';\nimport firebase from '../../../firebase';\n\nclass ContactsPanel extends React.Component {\n    state = {\n        anchorEl: null,\n        groupsRef: firebase.database().ref('groups'),\n        groups: []\n    }\n\n    setAnchorEl = (val) => {\n        this.setState({anchorEl: val});\n    }\n\n    handleMenu = (event) => {\n        this.setAnchorEl(event.currentTarget);\n    };\n\n    handleClose = (id) => (event) => {\n        this.setAnchorEl(null);\n        if (id === 3) {\n            \n        } else if (id === 2) {\n            \n        }\n    };\n\n    setInState = (name, val) => {\n        const state = this.state;\n        this.setState({[name]: val})\n    }\n\n    componentDidMount() {\n        this.addListeners();\n    }\n\n    componentWillUnmount() {\n        this.state.groupsRef.off();\n    }\n\n    addListeners = () => {\n        let loadedGroups = []\n\n        this.state.groupsRef.on('child_added', snap => {\n            loadedGroups.push(snap.val());\n            this.setInState('groups', loadedGroups); \n        });\n\n        console.log(loadedGroups);\n    }\n\n    changeActiveChat = group => {\n        this.props.setCurrentChat(group);\n    }\n\n    displayGroups = groups => {\n        \n        return groups.map(group => (\n            <CardActionArea key={group.id}>\n                <CardHeader\n                    onClick={() => this.changeActiveChat(group)}\n                    avatar={    \n                    <Avatar aria-label=\"recipe\"/>\n                    }\n                    title={group.name}\n                    subheader={group.description}\n                />\n            </CardActionArea>\n        ))\n    }\n\n    render() {\n        const user = this.props.currentUser;\n    \n        return (\n            <Paper elevation={2} style={{height: '100%'}}>\n                <div >\n                    {user ? \n                        <CardHeader\n                            avatar={    \n                            <Avatar aria-label=\"recipe\" src={user.photoURL}/>\n                            }\n                            action={\n                                <IconButton aria-label=\"settings\" \n                                    aria-haspopup=\"true\"\n                                    onClick={this.handleMenu}>\n                                  <MoreVertIcon/>\n                                </IconButton>\n                              }\n                            title={user.displayName}\n                            subheader={user.email}\n                        />\n                        : \n                        <CardHeader\n                            avatar={\n                            <Avatar aria-label=\"recipe\" >\n                                R\n                            </Avatar>\n                            }\n                            title=\"Not Signed In\"\n                            subheader=\"....\"\n                        />\n                    }                    \n                </div>\n\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    open={this.state.anchorEl}\n                    onClose={this.handleClose(0)}>\n\n                    <CreateGroupDialog closeDialog = {this.handleClose(0)}\n                        currentUser ={user}/>         \n                    \n                </Menu>\n                <br/>\n                <Typography variant='h6'>\n                    Your Chats\n                </Typography>\n\n                {this.displayGroups(this.state.groups)}\n            </Paper>\n        )\n    }\n}\n\n\nexport default connect(null, {setCurrentChat})(ContactsPanel);","import * as actionTypes from './types';\n \n/* User Actions */\nexport const setUser = user => {\n    return {\n        type: actionTypes.SET_USER,\n        payload: {\n            createdUser: user\n        }\n    }\n}\n\nexport const clearUser = () => {\n    return {\n        type: actionTypes.CLEAR_USER\n    }\n}\n\n\n/* Chat Actions */\nexport const setCurrentChat = chat => {\n    return {\n        type: actionTypes.SET_CURRENT_CHAT,\n        payload: {\n            chat: chat\n        }\n    }\n}","/* User action type */\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\n\n\n/* Chat Action Types */\nexport const SET_CURRENT_CHAT = 'SET_CURRENT_CHAT';\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\n\nconst useStyles = (theme) => ({\n  root: {\n  },\n  color: {\n      backgroundColor: theme.palette.type === 'dark' ? '#323232': '#e0e0e0',\n      color: theme.palette.text.primary,\n      paddingLeft: 8\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nclass MessageHeader extends React.Component {\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" className={classes.color} disableGutters={true}>\n                    <Toolbar variant=\"dense\" disableGutters={true}>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                            {this.props.chat ? this.props.chat.name : 'Chat Name'}\n                        </Typography>\n\n                        <IconButton >\n                            <AttachFileOutlinedIcon />\n                        </IconButton>\n\n                        <IconButton >\n                            <InfoTwoToneIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(MessageHeader);","import React from 'react';\nimport './AllMessages.css';\nimport Card from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\n\n\nfunction ChatMessage(props){ \n    const rad = 8;\n    let radLeft = rad;\n    let radRight = rad;\n    if (props.firstMessage) {\n        if (props.user) {\n            radRight = 1;\n        } else {\n            radLeft = 1;\n        }\n    } \n    \n    return (\n        <div style={{display: 'flex'}}>\n            {}\n            <Card {...props} style={{borderRadius: rad, borderTopLeftRadius: radLeft, borderTopRightRadius: radRight}}  variant='outlined'>\n                {props.showName ? \n                    <Typography variant='body2' color='textSecondary' style={{textAlign: props.user ? 'right' : 'left'}}>{props.message.user.name}</Typography>\n                    : null\n                }\n                <Typography variant='body1' >\n                    {props.message.content}\n                </Typography>\n            </Card>\n        </div>\n        \n    )\n}\n\nexport default (props) => {\n    // const [lastUserId, setLastUserId] = React.useState('');\n    let showName = false;\n    let lastUserId = false;\n    return (\n        props.messages.map(message => {\n            {message.user.id === lastUserId ? showName= false : showName = true}\n            {lastUserId = message.user.id}\n            return message.user.id === props.userId ?\n                <ChatMessage  className='message user-message' \n                    message={message} \n                    showName={showName} \n                    firstMessage={showName}\n                    user/>\n                :\n                <ChatMessage  \n                    className='message' \n                    message={message} \n                    showName={showName} \n                    firstMessage={showName}/>\n        })\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport {List} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MessageHeader from './MessageHeader';\nimport AllMessages from './AllMessages';\n\nconst useStyles = (theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    padding: 0,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n});\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nclass ElevateAppBar extends React.Component {\n  state = {\n    messagesLoading: true,\n    messages: []\n  }\n  componentDidMount() {\n    if (this.props.chat) {\n      this.addListeners(this.props.chat.id);\n    }\n  }\n\n  addListeners = chatId => {\n    this.setState({messages: [], messagesLoading: true});\n    this.addMessageListener(chatId);\n  }\n\n  componentDidUpdate = prevProps => {\n    console.log(prevProps);\n    if (prevProps.chat) {\n      if (this.props.chat.id !== prevProps.chat.id) {\n        this.removeListeners(prevProps.chat.id);\n        this.addListeners(this.props.chat.id);\n      }\n    }\n  }\n\n  removeListeners = chatId => {\n    this.props.messageRef.child(chatId).off();\n  }\n\n  addMessageListener = chatId => {\n    let loadedMessages = [];\n    console.log(\"Ading listener\");\n    this.props.messageRef.child(chatId).on('child_added', snap => {\n      loadedMessages.push(snap.val());\n      console.log(loadedMessages);\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      })\n    })\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <React.Fragment>\n      \n        <ElevationScroll {...this.props}>\n          <MessageHeader chat={this.props.chat}/>\n        </ElevationScroll>\n        \n        <Container style={{flexGrow: 1, maxHeight: '77vh', margin: 1, padding: 0}}>\n          <List className={classes.root} subheader={<li />}>\n            <AllMessages messages={this.state.messages} userId={this.props.user.uid}/>\n          </List>\n        </Container>\n      </React.Fragment>\n    );\n  }\n  \n}\n\n\nexport default withStyles(useStyles)(ElevateAppBar);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {TextField, IconButton, Grid, InputBase} from '@material-ui/core';\nimport SendTwoToneIcon from '@material-ui/icons/SendTwoTone';\nimport firebase from '../../../firebase';\n\nconst useStyles = (theme) => ({\n    root: {\n      backgroundColor: theme.palette.type === 'dark' ? '#353535': '#e0e0e0',\n      color: theme.palette.text.primary,\n      alignItems: 'bottom'\n    },\n    icon: {\n      verticalAlign: 'bottom'\n    },\n    centering: {\n      margin: 'auto',\n      width: '100%',\n      height: '100%',\n      padding: '8px'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n  });\n\nclass MessageForm extends React.Component {\n  state = {\n    message: ''\n  }\n\n  handleChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  createMessage = () => {\n    return  {\n      content: this.state.message,\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.props.user.uid,\n        name: this.props.user.displayName,\n        avatar: this.props.user.photoURL\n      }\n    }\n    \n  }\n  submit = () => {\n    if (this.state.message) {\n      const {messageRef} = this.props;\n      messageRef\n        .child(this.props.chatId)\n        .push()\n        .set(this.createMessage())\n\n      console.log(this.props.chatId)\n    }\n    this.setState({message: ''})\n  }\n\n  render() {\n      const {classes} = this.props;\n      return (\n        <div className={classes.root}>\n            <Grid container>\n              <Grid item xs={11}>\n              <InputBase\n                  className={classes.input + ' ' + classes.centering}\n                  placeholder=\"Type message here\"\n                  multiline\n                  name='message'\n                  value = {this.state.message}\n                  onChange={this.handleChange}\n                  rowsMax={4}\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <IconButton onClick={this.submit}>\n                  <SendTwoToneIcon className={classes.icon} fontSize='32'/>\n                </IconButton>\n              </Grid>\n            </Grid>\n        </div>\n      )\n  }\n}\n\nexport default withStyles(useStyles)(MessageForm);","import React from 'react';\nimport {Paper, Typography, Grid} from '@material-ui/core';\nimport ScrollableMessages from './ScrollableMessages';\nimport MessageForm from './MessageForm';\nimport firebase from '../../../firebase';\nimport MessageHeader from './MessageHeader';\n\nclass Messages extends React.Component {\n    state = {\n        messageRef: firebase.database().ref('messages')\n    }\n    render() {\n        return (\n            <Paper elevation={2} style={{height: '100%', display: 'flex', flexDirection: 'column', flexWrap: 'wrap'}}>\n                {this.props.chat && this.props.user ? <ScrollableMessages \n                                        chat={this.props.chat} \n                                        messageRef={this.state.messageRef}\n                                        user={this.props.user}/>: null}\n                \n            \n                <MessageForm \n                    chatId = {this.props.chat ? this.props.chat.id : ''} \n                    user={this.props.user}\n                    messageRef={this.state.messageRef}/>\n            </Paper>\n        )\n    }\n}\n\nexport default Messages;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Grid} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport ContactsPanel from './ContactsPanel/ContactsPanel';\nimport Messages from './Messages/Messages';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1\n    },\n    content: {\n      height: '91vh',\n    },\n    container: {\n      width: '100%',\n      margin: 0\n    },\n    item: {\n      padding: 6\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nfunction Home (props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container direction=\"row\" justify=\"space-around\" className={classes.container}>\n                <Grid item xs={12} sm = {4} className={classes.content + \" \" + classes.item}>\n                  <ContactsPanel currentUser={props.currentUser}/>\n                </Grid>                \n                <Grid item xs={12} sm ={8} className={classes.content + \" \" + classes.item}>\n                  <Messages chat = {props.currentChat} user={props.currentUser}/>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChat: state.chat.chat\n});\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport './App.css';\n\nimport LoadingScreen from './LoadingScreen';\nimport Home from './Home';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    background: theme.palette.type === 'dark' ? '#373737': '#fafafa'\n  }\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  return (\n    <div className={\"app \" + classes.bg}>\n      {props.isLoading ? \n        <LoadingScreen message = \"Fetching your messages\" />\n        :\n        <Home/>\n      }\n      \n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport {Grid, Typography, IconButton, OutlinedInput, InputLabel, \nInputAdornment, FormControl, TextField, Button, Paper,\nCircularProgress, FormHelperText} from '@material-ui/core';\n\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport logo from '../../logo.svg';\n\nimport {Link} from 'react-router-dom';\nimport firebase from '../../firebase';\n\nconst useStyles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n      width: '38ch',\n    },\n    bg: {\n        background: theme.palette.type === 'dark' ? '#373737': '#fafafa'\n    },\n    link: {\n        color: theme.palette.secondary.main\n    }\n  });\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            showPassword: false,\n            \n            emailError: '',\n            passwordError: '',\n            loading: false,\n        }\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({showPassword: !this.state.showPassword });\n    };\n\n    handleChange = (prop) => (event) => {\n        this.setState({[prop]: event.target.value });\n    };\n\n    setMessage = (name, message) => {\n        this.setState({[name]: message});\n    }\n\n    resetErrors = async () => {\n        await this.setState({emailError: '', passwordError: ''});\n    }\n\n    isFormValid = () => {\n        let val = true;\n        \n        if (this.state.email.length === 0) {\n            this.setMessage('emailError', \"Email field cannot be empty\");\n            val = false;\n        } \n        if (this.state.password.length < 6) {\n            this.setMessage('passwordError', \"Password must have atleast 6 characters\");\n            val = false;\n        } \n\n        return val;\n    }\n\n    handleSubmit = () => {\n        this.resetErrors().then(() => {\n            if (this.isFormValid()) {\n                this.setState({...this.state, loading: true});\n                firebase\n                    .auth()\n                    .signInWithEmailAndPassword(this.state.email, this.state.password)\n                    .then(signedInUser => {\n                        console.log(signedInUser);\n                        this.setState({...this.state, loading: false});\n                    })\n                    .catch(err => {\n                        console.error(err);\n                        \n                        if (err.message.toLowerCase().includes('email')) {\n                            this.setMessage('emailError', err.message);\n                        } else if (err.message.toLowerCase().includes('password')) {\n                            this.setMessage('passwordError', err.message);\n                        }\n                        this.setState({...this.state, loading: false});\n                    })\n            } else {\n    \n            }\n        });\n        \n    }\n\n    render() {\n        const {classes} = this.props;\n    \n        return (\n            <div className={classes.root + \" app \" + classes.bg}>\n                <Grid container justify='center'>\n                    <Grid item  style={{maxWidth: 550, textAlign: 'center'}}>\n                       <Paper elevation={2} style={{padding: 30, borderRadius: 10, marginTop: '1em'}}>\n                            <img src={logo} alt=\"logo\" style={{margin:'auto'}} width='50%' height='30%'/>\n                            <Typography variant = 'h5' >Login to Messenger</Typography>\n                            <br/>\n\n                            <TextField className={clsx(classes.margin, classes.textField)} \n                                error = {this.state.emailError.length > 0}\n                                helperText = {this.state.emailError}\n                                id=\"mail\" label=\"E-Mail\" variant=\"outlined\" \n                                value={this.state.email}\n                                onChange = {this.handleChange('email')}/>\n                            <br/>\n                            <FormControl error = {this.state.passwordError.length > 0} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type={this.state.showPassword ? 'text' : 'password'}\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    \n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                        edge=\"end\"\n                                        >\n                                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                    labelWidth={70}\n                                />\n                                 <FormHelperText id=\"outlined-adornment-password\">{this.state.passwordError}</FormHelperText>\n                            </FormControl>\n                            <br/>\n                            {this.state.loading ? <CircularProgress color=\"secondary\" \n                            className={clsx(classes.margin)}/> :\n                                <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                onClick={this.handleSubmit}\n                                className={clsx(classes.margin)}\n                                >LOGIN</Button>\n                            }\n                            \n                            <br/>\n                            <Typography variant=\"body2\" component=\"p\">\n                                Don't have an account? <Link to=\"/register\" replace className={classes.link}>Register</Link>\n                            </Typography>\n                       </Paper>\n                        \n                    </Grid> \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Login);","import React from 'react';\n\nimport {Grid, Typography, IconButton, OutlinedInput, InputLabel, \nInputAdornment, FormControl, TextField, Button, Paper,\nCircularProgress, FormHelperText} from '@material-ui/core';\n\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport logo from '../../logo.svg';\n\nimport {Link} from 'react-router-dom';\nimport firebase from '../../firebase';\nimport md5 from 'md5';\n\nconst useStyles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n      width: '38ch',\n    },\n    bg: {\n        background: theme.palette.type === 'dark' ? '#373737': '#fafafa'\n    },\n    link: {\n        color: theme.palette.secondary.main\n    }\n  });\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            showPassword: false,\n            \n            nameError: '',\n            emailError: '',\n            passwordError: '',\n            loading: false,\n\n            usersRef: firebase.database().ref('users')\n        }\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    handleChange = (prop) => (event) => {\n        this.setState({[prop]: event.target.value });\n    };\n\n    setMessage = (name, message) => {\n        this.setState({[name]: message});\n    }\n\n    resetErrors = async () => {\n        await this.setState({ nameError: '', emailError: '', passwordError: ''});\n    }\n    isFormValid = () => {\n        let val = true;\n        if (this.state.name.length === 0) {\n            this.setMessage('nameError', \"Name field cannot be empty\");\n            // this.showSnackbar(\"Name field cannot be empty\");\n            val = false;\n        } \n        if (this.state.email.length === 0) {\n\n            this.setMessage('emailError', \"Email field cannot be empty\");\n            val = false;\n        } \n        if (this.state.password.length < 6) {\n            this.setMessage('passwordError', \"Password must have atleast 6 characters\");\n            val = false;\n        } \n\n        return val;\n    }\n\n    handleSubmit = () => {\n        this.resetErrors().then(() => {\n            if (this.isFormValid()) {\n                this.setState({loading: true});\n                firebase\n                    .auth()\n                    .createUserWithEmailAndPassword(this.state.email, this.state.password)\n                    .then(createdUser => {\n                        console.log(createdUser);\n                        createdUser.user.updateProfile({\n                            displayName: this.state.name,\n                            photoURL: `http://gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\n                        })\n                        .then(() => {\n                            this.saveUser(createdUser)\n                                .then(() => {\n                                    console.log(\"User saved!!\")\n                                    this.setState({loading: false});\n                                })\n                                .catch(error => {\n                                    console.error(error);\n                                })                          \n                        })\n                        .catch(err => { \n                            this.setState({loading: false});\n                        })\n                        \n                    })\n                    .catch(err => {\n                        console.error(err);\n                        \n                        if (err.message.toLowerCase().includes('email')) {\n                            this.setMessage('emailError', err.message);\n                        } else if (err.message.toLowerCase().includes('password')) {\n                            this.setMessage('passwordError', err.message);\n                        }\n                        this.setState({loading: false});\n                    })\n            } else {\n    \n            }\n        });\n        \n    }\n\n\n    saveUser = createdUser => {\n        return this.state.usersRef.child(createdUser.user.uid).set({\n            name: createdUser.user.displayName,\n            avatar: createdUser.user.photoURL,\n            email: createdUser.user.email\n        })\n    }\n\n    render() {\n        const {classes} = this.props;\n   \n        return (\n            <div className={classes.root + \" app \" + classes.bg}>\n                \n\n                <Grid container justify='center'>\n                    <Grid item  style={{maxWidth: 550, textAlign: 'center'}}>\n                       <Paper elevation={2} style={{padding: 30, borderRadius: 10, margin: '1em'}}>\n                            <img src={logo} alt=\"logo\" style={{margin:'auto'}} width='50%' height='30%'/>\n                            <Typography variant = 'h5' >Register for Messenger</Typography>\n                            <br/>\n\n                            <TextField className={clsx(classes.margin, classes.textField)} \n                                error = {this.state.nameError.length > 0}\n                                helperText = {this.state.nameError}\n                                id=\"name\" label=\"Name\" variant=\"outlined\" \n                                value = {this.state.name}\n                                onChange = {this.handleChange('name')}/>\n                            <br/>\n                            <TextField className={clsx(classes.margin, classes.textField)} \n                                error = {this.state.emailError.length > 0}\n                                helperText = {this.state.emailError}\n                                id=\"mail\" label=\"E-Mail\" variant=\"outlined\" \n                                value={this.state.email}\n                                onChange = {this.handleChange('email')}/>\n                            <br/>\n                            <FormControl error = {this.state.passwordError.length > 0} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type={this.state.showPassword ? 'text' : 'password'}\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    \n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                        edge=\"end\"\n                                        >\n                                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                    labelWidth={70}\n                                />\n                                 <FormHelperText id=\"outlined-adornment-password\">{this.state.passwordError}</FormHelperText>\n                            </FormControl>\n                            <br/>\n                            {this.state.loading ? <CircularProgress color=\"secondary\" \n                            className={clsx(classes.margin)}/> :\n                                <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                onClick={this.handleSubmit}\n                                className={clsx(classes.margin)}\n                                >REGISTER</Button>\n                            }\n                            \n                            <br/>\n                            <Typography variant=\"body2\" component=\"p\">\n                                Already a User? <Link to=\"/login\" replace className={classes.link}>Login</Link>\n                            </Typography>\n                       </Paper>\n                        \n                    </Grid> \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Register);","import React from 'react';\nimport firebase from '../../firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {AppBar, IconButton, Toolbar, Typography, Menu,\nMenuItem} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n  \n\n\n\nexport default (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const classes = useStyles();\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (id) => (event) => {\n    setAnchorEl(null);\n    if (id === 3) {\n      handleSignout();\n    } else if (id === 2) {\n      props.toggleDarkMode()\n    }\n  };\n\n  const handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log(\"Signed out\")\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Messenger\n          </Typography>\n          \n          \n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={open}\n            onClose={handleClose(0)}\n          >\n            <MenuItem onClick={handleClose(2)}>Toggle Dark Mode</MenuItem> \n            {props.user ? \n              <MenuItem onClick={handleClose(3)}>Logout</MenuItem>\n            :null}           \n            \n          </Menu>\n      \n          \n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport * as actionTypes from '../actions/types';\n\nconst initialUserState = {\n    currentUser: null,\n    isLoading: true\n}\n\nconst user_reducer = (state = initialUserState, action) => {\n    console.log(action);\n    switch(action.type) {\n        case actionTypes.SET_USER:\n            return {\n                currentUser: action.payload.createdUser,\n                isLoading: false\n            }\n        case actionTypes.CLEAR_USER:\n            return {\n                ...initialUserState,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst initialChatState = {\n    chat: null\n}\n\nconst chat_reducer = (state = initialChatState, action) => {\n    switch(action.type) {\n        case actionTypes.SET_CURRENT_CHAT:\n            return {\n                ...state,\n                chat: action.payload.chat\n            }\n        default:\n            return state;\n\n    }\n}\nconst rootReducer = combineReducers({\n    user: user_reducer,\n    chat: chat_reducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider, connect} from 'react-redux';\n\nimport './index.css'\n\nimport App from './components/App';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport AppBar from './components/AppBar/AppBar';\n\nimport firebase from './firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router, Switch, Route, withRouter} from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport rootReducer from './reducers';\nimport {setUser, clearUser} from './actions';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#ff6f00',\n    },\n  },\n});\n\nconst theme2 = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#ff6f00',\n    },\n  },\n});\n\nconst store = createStore(rootReducer);\n\nclass Root extends React.Component {\n  state = {\n    message: \"\",\n    darkMode: false\n  }\n\n  showSnackbarMessage(message) {\n    this.setState({message: message});\n  }\n\n  toggleDarkMode() {\n    this.setState({darkMode: !this.state.darkMode});\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.showSnackbarMessage('Logged in as ' + user.displayName);\n        this.props.history.replace('/');\n        this.props.setUser(user);\n      } else {\n        this.props.history.replace('/login');\n        this.props.clearUser();\n      }\n    })\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={this.state.darkMode ? theme2 : theme}>\n        <React.Fragment>\n          <AppBar user = {this.props.currentUser} toggleDarkMode= {() => this.toggleDarkMode()}/>\n          <Switch>\n            <Route exact path=\"/\" component={() => (<App isLoading = {this.props.isLoading} user = {this.props.currentUser}/>)} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            open={this.state.message.length > 0}\n            autoHideDuration={1000}\n            onClose={() => {this.setState({message: ''})}}\n            message = {this.state.message}\n            />\n        </React.Fragment>\n      </ThemeProvider>\n    )\n  }\n} \n\nconst mapStatesToProps = state => ({\n  isLoading: state.user.isLoading,\n  currentUser: state.user.currentUser\n})\nconst RootWithAuth = withRouter(connect(mapStatesToProps, {setUser, clearUser})(Root));\n\nReactDOM.render(\n  \n  <Provider store = {store}>\n    <Router>\n      <RootWithAuth/>\n    </Router>    \n  </Provider>\n\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}